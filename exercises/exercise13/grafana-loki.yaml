apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: opentelemetry
data:
  loki.yaml: |
    # This is a complete configuration to deploy Loki backed by the filesystem.
    # The index will be shipped to the storage via tsdb-shipper.

    auth_enabled: false

    server:
      http_listen_port: 3100

    common:
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
      replication_factor: 1
      path_prefix: /tmp/loki

    schema_config:
      configs:
      - from: 2020-05-15
        store: tsdb
        object_store: filesystem
        schema: v13
        index:
          prefix: index_
          period: 24h

    storage_config:
      filesystem:
        directory: /tmp/loki/chunks

    ruler:
      storage:
        type: local
        local:
          directory: /loki/rules
      rule_path: /tmp/rules/fake/
      alertmanager_url: http://localhost:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: opentelemetry
spec:
  replicas: 1  # Number of replicas
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:3.1.0
          ports:
            - containerPort: 3100
          args:
            - -config.file=/etc/loki/loki.yaml  # Specify the custom config file path
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/loki.yaml
              subPath: loki.yaml
      volumes:
        - name: loki-config
          configMap:
            name: loki-config  # Reference the config map
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: opentelemetry
spec:
  ports:
    - port: 3100
      targetPort: 3100
      protocol: TCP
  selector:
    app: loki
